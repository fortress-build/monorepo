"use client";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Card, CardContent, CardFooter, CardHeader, CardTitle, } from "@nerve-js/ui/components/ui/card";
import { ArrowLeft, ArrowUpRight, Check, ChevronDown } from "lucide-react";
import Image from "next/image";
import { useState } from "react";
import { Button } from "@nerve-js/ui/components/ui/button";
export default function ConsentScreen({ onAccept, provider, onBack, healthInfo, }) {
    const [selectedItem, setSelectedItem] = useState(null);
    return (_jsxs(Card, { className: "w-[500px] mx-auto mt-16 shadow-none border border-gray-200", children: [_jsx(CardHeader, { children: _jsx("div", { className: "flex items-center justify-between mb-4", children: _jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Button, { variant: "ghost", size: "sm", onClick: onBack, className: "text-gray-500", children: _jsx(ArrowLeft, { className: "h-4 w-4" }) }), _jsxs("div", { className: "flex items-center gap-2", children: [provider.icon, _jsxs(CardTitle, { children: ["Connect to ", provider.name] })] })] }) }) }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-4", children: [_jsxs("p", { className: "text-gray-600", children: ["We are requesting the following permissions from ", provider.name, ":"] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "font-medium text-gray-900", children: "Read Access" }), _jsx("ul", { className: "space-y-2 text-gray-600", children: healthInfo.read?.map((item) => (_jsxs("li", { className: "flex flex-col gap-2 p-3 border rounded-md bg-gray-50 cursor-pointer hover:bg-gray-100 transition-colors", onKeyUp: () => null, onClick: () => setSelectedItem(selectedItem === item.title ? null : item.title), children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Check, { className: "h-4 w-4 text-green-500 flex-shrink-0" }), _jsx("span", { children: item.title })] }), _jsx(ChevronDown, { className: `h-4 w-4 text-gray-500 transition-transform ${selectedItem === item.title ? "rotate-180" : ""}` })] }), selectedItem === item.title && (_jsxs("div", { className: "text-sm text-gray-600 mt-2", children: [_jsx("p", { className: "text-xs text-gray-500 mb-2", children: _jsx("span", { className: "font-medium", children: "FHIR Resources:" }) }), _jsx("div", { className: "space-y-2", children: item.fhirResources.map((resource) => (_jsxs("div", { className: "p-2 bg-white border rounded-md shadow-sm", children: [_jsx("div", { className: "text-sm font-medium text-gray-700", children: resource.name }), _jsx("div", { className: "text-sm text-gray-600", children: resource.description })] }, resource.name))) })] }))] }, item.title))) }), _jsx("h3", { className: "font-medium text-gray-900 pt-4", children: "Write Access" }), _jsx("ul", { className: "space-y-2 text-gray-600", children: healthInfo.write?.map((item) => (_jsxs("li", { className: "flex flex-col gap-2 p-3 border rounded-md bg-gray-50 cursor-pointer hover:bg-gray-100 transition-colors", onKeyUp: () => null, onClick: () => setSelectedItem(selectedItem === item.title ? null : item.title), children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Check, { className: "h-4 w-4 text-green-500 flex-shrink-0" }), _jsx("span", { children: item.title })] }), _jsx(ChevronDown, { className: `h-4 w-4 text-gray-500 transition-transform ${selectedItem === item.title ? "rotate-180" : ""}` })] }), selectedItem === item.title && (_jsxs("div", { className: "text-sm text-gray-600 mt-2", children: [_jsx("p", { className: "text-xs text-gray-500 mb-2", children: _jsx("span", { className: "font-medium", children: "FHIR Resources:" }) }), _jsx("div", { className: "space-y-2", children: item.fhirResources.map((resource) => (_jsxs("div", { className: "p-2 bg-white border rounded-md shadow-sm", children: [_jsx("div", { className: "text-sm font-medium text-gray-700", children: resource.name }), _jsx("div", { className: "text-sm text-gray-600", children: resource.description })] }, resource.name))) })] }))] }, item.title))) })] }), _jsxs("div", { className: "space-y-2 text-sm text-gray-500 mt-4", children: [_jsx("p", { children: "Your data will be handled securely and in accordance with HIPAA guidelines." }), _jsxs("div", { className: "flex flex-col gap-2", children: [_jsxs("a", { href: "https://docs.example.com/data-handling", target: "_blank", rel: "noopener noreferrer", className: "text-blue-500 hover:text-blue-700 hover:underline inline-flex items-center gap-1", children: ["Learn how we handle your data", _jsx(ArrowUpRight, { className: "h-3 w-3" })] }), _jsxs("a", { href: "https://github.com/fortress-build/fhirball", target: "_blank", rel: "noopener noreferrer", className: "text-blue-500 hover:text-blue-700 hover:underline inline-flex items-center gap-1", children: ["View our open source code", _jsx(ArrowUpRight, { className: "h-3 w-3" })] })] })] }), _jsx(Button, { className: "w-full mt-4", onClick: onAccept, children: "I Understand and Accept" })] }) }), _jsx(CardFooter, { className: "flex justify-center", children: _jsxs("span", { className: "flex items-center text-xs text-gray-500 gap-2", children: ["Powered by Nerve", _jsx(Image, { src: "https://d31yg8dlyykylt.cloudfront.net/logo.svg", alt: "Nerve Logo", width: 16, height: 16 })] }) })] }));
}
